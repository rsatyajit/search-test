{"version":3,"sources":["component/header.js","model/modelHandler.js","component/Sublist.js","component/list.js","component/admin/Sublist.js","component/admin/list.js","App/App.js","serviceWorker.js","index.js"],"names":["Header","state","name","isLoggedIn","handleCLick","localStorage","clear","_this","setState","browserHistory","push","concat","process","handleInfo","getItem","user","JSON","parse","fname","dashboardHandler","_this2","this","listen","location","react_default","a","createElement","className","style","cursor","onClick","props","children","React","Component","dataHandler","fetchGitrepos","options","language","page","limit","axios","get","then","res","catch","err","setSearchResults","config","totalitems","totalItems","search","post","console","log","fetchSearchResults","Sublist","index","window","open","item","html_url","id","full_name","description","List","data","dropDownHandler","event","target","value","bindingData","searchHandler","paginateHandler","response","status","prevState","Object","toConsumableArray","items","total_count","storeSearchResults","inputHandler","loadMoreHandler","sublist","length","map","component_Sublist","key","type","onChange","Date","created","toLocaleDateString","AdminList","admin_Sublist","App","es","basename","history","path","component","Boolean","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b0e582b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { browserHistory } from 'react-router';\r\nclass Header extends React.Component {\r\n    state = {\r\n        name: \"\",\r\n        isLoggedIn: false\r\n    };\r\n\r\n    handleCLick = () => {\r\n        localStorage.clear();\r\n        this.setState({ isLoggedIn: false })\r\n        browserHistory.push(`${process.env.PUBLIC_URL}/`);\r\n    }\r\n    componentDidMount() {\r\n        this.handleInfo();\r\n        browserHistory.listen(location => {\r\n            this.handleInfo();\r\n        });\r\n    }\r\n\r\n    handleInfo = () => {\r\n        if (localStorage.getItem(\"user\")) {\r\n            let user = JSON.parse(localStorage.getItem(\"user\"));\r\n            this.setState({ name: `${user.fname}`, isLoggedIn: true })\r\n        }\r\n    }\r\n    dashboardHandler = () => {\r\n        browserHistory.push(`${process.env.PUBLIC_URL}/`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"header\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                            <p style={{ cursor: \"pointer\" }} className=\"header_text\" onClick={this.dashboardHandler}>Git search</p>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","\r\nimport axios from 'axios';\r\nconst baseurl = \"http://localhost:8000\";\r\n\r\nclass dataHandler {\r\n    fetchGitrepos = (options) => {\r\n        const { language, page, limit } = options;\r\n        return axios.get(`https://api.github.com/search/repositories?q=language:${language}&page=${page}&per_page=${limit}`).then(res => {\r\n            return res;\r\n        }).catch(err => {\r\n            return null;\r\n        })\r\n    }\r\n\r\n    setSearchResults = (options) => {\r\n        let config = {\r\n            totalitems: options.totalItems,\r\n            search: options.search\r\n        };\r\n        return axios.post(`${baseurl}/save/search`, config)\r\n            .then(res => {\r\n                console.log(res);\r\n            }).catch(err => {\r\n                return null;\r\n            })\r\n    }\r\n\r\n\r\n    fetchSearchResults = (options) => {\r\n        const { language, page, limit } = options;\r\n        return axios.get(`http://localhost:8000/get/search?page=${page}&limit=${limit}&query=${language}`).then(res => {\r\n            return res;\r\n        }).catch(err => {\r\n            return null;\r\n        })\r\n    }\r\n}\r\n\r\nexport { dataHandler };","import React from 'react';\r\n\r\nclass Sublist extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>{this.props.index + 1}</td>\r\n                <td style={{ cursor: \"pointer\" }} onClick={() => window.open(this.props.item.html_url, \"_blank\")}>{this.props.item.id}</td>\r\n                <td style={{ cursor: \"pointer\" }} onClick={() => window.open(this.props.item.html_url, \"_blank\")}>{this.props.item.full_name}</td>\r\n                <td>{this.props.item.description}</td>\r\n            </tr>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Sublist;","import React from 'react';\r\nimport { dataHandler } from \"../model/modelHandler\";\r\nimport Sublist from './Sublist';\r\n// import Pagination from './pagination';\r\nclass List extends React.Component {\r\n    state = {\r\n        data: [],\r\n        search: \"\",\r\n        page: 1,\r\n        limit: 10,\r\n        totalItems: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.bindingData();\r\n    }\r\n\r\n    dropDownHandler = (event) => {\r\n        console.log(event.target.value);\r\n        this.setState({ limit: event.target.value }, () => this.bindingData());\r\n    }\r\n    searchHandler = () => {\r\n        this.setState({ data: [], page: 1 }, () => this.bindingData())\r\n    }\r\n    paginateHandler = (page) => {\r\n        this.setState({ page: page }, () => this.bindingData());\r\n    }\r\n\r\n    bindingData = () => {\r\n        let options = { language: this.state.search, page: this.state.page, limit: this.state.limit }\r\n        new dataHandler().fetchGitrepos(options).then(response => {\r\n            console.log(response)\r\n            if (response && response.status === 200) {\r\n                this.setState(prevState => ({\r\n                    data: [...prevState.data, ...response.data.items]\r\n                }))\r\n                this.setState({ totalItems: response.data.total_count })\r\n                this.storeSearchResults();\r\n            } else {\r\n                this.setState({ data: [], totalItems: 0 });\r\n                this.storeSearchResults();\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    storeSearchResults = () => {\r\n        new dataHandler().setSearchResults(this.state)\r\n    }\r\n\r\n    inputHandler = (event) => {\r\n        this.setState({ search: event.target.value })\r\n    }\r\n\r\n\r\n    loadMoreHandler = () => {\r\n        this.setState(prevState => {\r\n            return { page: prevState.page + 1 }\r\n        }, () => this.bindingData())\r\n    }\r\n\r\n    render() {\r\n        let sublist = null;\r\n        sublist =\r\n            this.state.data.length > 0 ?\r\n                this.state.data.map((item, index) => <Sublist key={item.id} item={item} index={index} />) :\r\n                <tr>No records found</tr>\r\n        return (\r\n            <div className=\"sections_all_listing\">\r\n                <div className=\"table_header\">\r\n                    <div className=\"contents_search\">\r\n                        Search by language :\r\n                        <input type=\"text\" className=\"search_field\" name=\"search\" value={this.state.search} onChange={this.inputHandler} />\r\n                        <button onClick={this.searchHandler}>search</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form_section \">\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-borderless\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Sl</th>\r\n                                    <th>Id</th>\r\n                                    <th>Name</th>\r\n                                    <th>Description</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {sublist}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                {this.state.data.length > 0 ?\r\n                    <div><span className=\"lower\">  <button onClick={this.loadMoreHandler}>load more</button> {this.state.totalItems - this.state.data.length}  more records left</span></div>\r\n                    : \"\"\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default List;\r\n","import React from 'react';\r\n\r\nclass Sublist extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>{this.props.index + 1}</td>\r\n                <td >{this.props.item.search}</td>\r\n                <td >{this.props.item.totalitems}</td>\r\n                <td>{new Date(this.props.item.created).toLocaleDateString()}</td>\r\n            </tr>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Sublist;","import React from 'react';\r\nimport { dataHandler } from \"../../model/modelHandler\";\r\nimport Sublist from './Sublist';\r\n// import Pagination from './pagination';\r\nclass AdminList extends React.Component {\r\n    state = {\r\n        data: [],\r\n        search: \"\",\r\n        page: 1,\r\n        limit: 10,\r\n        totalItems: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.bindingData();\r\n    }\r\n\r\n    dropDownHandler = (event) => {\r\n        console.log(event.target.value);\r\n        this.setState({ limit: event.target.value }, () => this.bindingData());\r\n    }\r\n    searchHandler = () => {\r\n        this.setState({ data: [], page: 1 }, () => this.bindingData())\r\n    }\r\n    paginateHandler = (page) => {\r\n        this.setState({ page: page }, () => this.bindingData());\r\n    }\r\n\r\n    bindingData = () => {\r\n        let options = { language: this.state.search, page: this.state.page, limit: this.state.limit }\r\n        new dataHandler().fetchSearchResults(options).then(response => {\r\n            console.log(response)\r\n            if (response && response.status === 200) {\r\n                this.setState(prevState => ({\r\n                    data: [...prevState.data, ...response.data.items]\r\n                }))\r\n                this.setState({ totalItems: response.data.total_count })\r\n                // this.storeSearchResults();\r\n            } else {\r\n                this.setState({ data: [], totalItems: 0 });\r\n                // this.storeSearchResults();\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    storeSearchResults = () => {\r\n        new dataHandler().setSearchResults(this.state)\r\n    }\r\n\r\n    inputHandler = (event) => {\r\n        this.setState({ search: event.target.value })\r\n    }\r\n\r\n\r\n    loadMoreHandler = () => {\r\n        this.setState(prevState => {\r\n            return { page: prevState.page + 1 }\r\n        }, () => this.bindingData())\r\n    }\r\n\r\n    render() {\r\n        let sublist = null;\r\n        sublist =\r\n            this.state.data.length > 0 ?\r\n                this.state.data.map((item, index) => <Sublist key={item.id} item={item} index={index} />) :\r\n                <tr>No records found</tr>\r\n        return (\r\n            <div className=\"sections_all_listing\">\r\n                <div className=\"table_header\">\r\n                    <div className=\"contents_search\">\r\n                        Search by language :\r\n                        <input type=\"text\" className=\"search_field\" name=\"search\" value={this.state.search} onChange={this.inputHandler} />\r\n                        <button onClick={this.searchHandler}>search</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form_section \">\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-borderless\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Sl</th>\r\n                                    <th>language</th>\r\n                                    <th>repos</th>\r\n                                    <th>searched on</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {sublist}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                {this.state.data.length > 0 && this.state.totalItems !== this.state.data.length ?\r\n                    <span className=\"lower\">  <button onClick={this.loadMoreHandler}>load more</button> {this.state.totalItems - this.state.data.length}  more records left</span>\r\n                    : \"\"\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AdminList;\r\n","import React from 'react';\r\nimport { Router, Route, browserHistory,IndexRoute} from \"react-router\";\r\nimport Header from '../component/header';\r\nimport List from '../component/list';\r\nimport AdminList from '../component/admin/list';\r\n\r\nfunction App() {\r\n  console.log(process.env.PUBLIC_URL);\r\n  return (\r\n    <div>\r\n      <Router basename={process.env.PUBLIC_URL} history={browserHistory}>\r\n        <Route path={`${process.env.PUBLIC_URL}/`} component={Header}>\r\n          <IndexRoute component={List} />\r\n          <Route path={`${process.env.PUBLIC_URL}/list`} component={List} />\r\n          <Route path={`${process.env.PUBLIC_URL}/admin`} component={AdminList} />\r\n        </Route>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}